{
  "version": 3,
  "sources": ["../../src/transformers/inline.ts", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Enum.js", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Utility.js", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Tokenizer.js", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Parser.js"],
  "sourcesContent": ["import { walkSync, ELEMENT_NODE, TEXT_NODE, Node, ElementNode } from \"../index.js\";\nimport { querySelectorAll, specificity } from \"../selector.js\";\nimport { compile } from \"stylis\";\n\nexport interface InlineOptions {\n  /** Emit `style` attributes as objects rather than strings. */\n  useObjectSyntax?: boolean;\n}\nexport default function inline(opts?: InlineOptions) {\n  const { useObjectSyntax = false } = opts ?? {};\n  return (doc: Node): Node => {\n    const style: string[] = useObjectSyntax ? [':where([style]) {}'] : [];\n    const actions: (() => void)[] = [];\n    walkSync(doc, (node: Node, parent?: Node) => {\n      if (node.type === ELEMENT_NODE) {\n        if (node.name === \"style\") {\n          style.push(\n            node.children\n              .map((c: Node) => (c.type === TEXT_NODE ? c.value : \"\"))\n              .join(\"\")\n          );\n          actions.push(() => {\n            parent!.children = parent!.children.filter((c: Node) => c !== node);\n          });\n        }\n      }\n    });\n    for (const action of actions) {\n      action();\n    }\n    const styles = style.join(\"\\n\");\n    const css = compile(styles);\n    const selectors = new Map<string, Record<string, string>>();\n    for (const rule of css) {\n      if (rule.type === \"rule\") {\n        const rules = Object.fromEntries(\n          (rule.children as unknown as Element[])\n            .map((child: any) => [child.props, child.children])\n        );\n        for (const selector of rule.props) {\n          const value = Object.assign(selectors.get(selector) ?? {}, rules);\n          selectors.set(selector, value);\n        }\n      }\n    }\n\n    const rules = new Map<Node, Record<string, string>>();\n    for (const [selector, styles] of Array.from(selectors).sort(([a], [b]) => {\n      const $a = specificity(a);\n      const $b = specificity(b);\n      if ($a > $b) return 1;\n      if ($b > $a) return -1;\n      return 0;\n    })) {\n      const nodes = querySelectorAll(doc, selector);\n      for (const node of nodes) {\n        const curr = rules.get(node) ?? {};\n        rules.set(node, Object.assign(curr, styles));\n      }\n    }\n\n    for (const [node, rule] of rules) {\n      let style = node.attributes.style ?? \"\";\n      let styleObj: Record<string, string> = {};\n      for (const decl of compile(style)) {\n        if (decl.type === \"decl\") {\n          if (\n            typeof decl.props === \"string\" &&\n            typeof decl.children === \"string\"\n          ) {\n            styleObj[decl.props] = decl.children;\n          }\n        }\n      }\n      styleObj = Object.assign({}, rule, styleObj);\n      if (useObjectSyntax) {\n        node.attributes.style = styleObj;\n      } else {\n        node.attributes.style = `${Object.entries(styleObj)\n          .map(([decl, value]) => `${decl}:${value.replace(\"!important\", \"\")};`)\n          .join(\"\")}`;\n      }\n    }\n    return doc;\n  };\n}\nfunction isHttpURL(href: string): boolean {\n  return href.startsWith('http://') || href.startsWith('https://');\n}\n", "export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n", "/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n", "import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n", "import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n"],
  "mappings": "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",
  "names": ["walkSync", "ELEMENT_NODE", "TEXT_NODE", "querySelectorAll", "specificity", "COMMENT", "RULESET", "DECLARATION", "abs", "from", "trim", "value", "replace", "value", "pattern", "replacement", "indexof", "search", "charat", "index", "substr", "begin", "end", "strlen", "sizeof", "append", "array", "line", "column", "length", "position", "character", "characters", "node", "value", "root", "parent", "type", "props", "children", "char", "character", "prev", "position", "charat", "characters", "column", "line", "next", "length", "peek", "caret", "slice", "begin", "end", "substr", "token", "type", "alloc", "value", "strlen", "dealloc", "delimit", "trim", "delimiter", "whitespace", "type", "character", "peek", "next", "token", "escaping", "index", "count", "next", "character", "slice", "caret", "peek", "delimiter", "type", "position", "commenter", "from", "identifier", "token", "compile", "value", "dealloc", "parse", "alloc", "root", "parent", "rule", "rules", "rulesets", "pseudo", "points", "declarations", "index", "offset", "length", "atrule", "property", "previous", "variable", "scanning", "ampersand", "character", "type", "props", "children", "reference", "characters", "next", "charat", "indexof", "replace", "delimit", "whitespace", "escaping", "caret", "peek", "append", "comment", "commenter", "strlen", "declaration", "ruleset", "prev", "from", "identifier", "post", "size", "sizeof", "i", "j", "k", "x", "y", "substr", "abs", "z", "trim", "node", "RULESET", "COMMENT", "char", "DECLARATION", "inline", "opts", "useObjectSyntax", "doc", "style", "actions", "walkSync", "node", "parent", "ELEMENT_NODE", "c", "TEXT_NODE", "action", "styles", "css", "compile", "selectors", "rule", "rules", "child", "selector", "value", "a", "b", "$a", "specificity", "$b", "nodes", "querySelectorAll", "curr", "styleObj", "decl"]
}
