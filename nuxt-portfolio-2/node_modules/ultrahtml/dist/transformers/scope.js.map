{
  "version": 3,
  "sources": ["../../src/transformers/scope.ts", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Enum.js", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Utility.js", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Tokenizer.js", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Parser.js", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Serializer.js", "../../node_modules/.pnpm/stylis@4.1.2/node_modules/stylis/src/Middleware.js", "../../node_modules/.pnpm/parsel-js@1.0.2/node_modules/parsel-js/dist/parsel.min.js"],
  "sourcesContent": ["import type { ElementNode } from '../index.js';\nimport { walkSync, ELEMENT_NODE, TEXT_NODE, Node, render } from \"../index.js\";\nimport { matches } from \"../selector.js\";\nimport { serialize, compile, middleware, stringify } from \"stylis\";\nimport { AST, parse } from 'parsel-js';\n\nexport interface ScopeOptions {\n  hash?: string;\n  attribute?: string;\n}\nexport default function scope(opts: ScopeOptions = {}) {\n  return async (doc: Node): Promise<Node> => {\n    const hash = opts.hash ?? shorthash(await render(doc));\n    const actions: (() => void)[] = [];\n    let hasStyle = false;\n    const selectors = new Set<string>();\n    const nodes = new Set<ElementNode>();\n    walkSync(doc, (node: Node) => {\n      if (node.type === ELEMENT_NODE && node.name === \"style\") {\n        if (!opts.attribute || (hasAttribute(node, opts.attribute))) {\n          hasStyle = true;\n          if (opts.attribute) {\n            delete node.attributes[opts.attribute];\n          }\n          for (const selector of getSelectors(node.children[0].value)) {\n            selectors.add(selector);\n          }\n        }\n      }\n      if (node.type === ELEMENT_NODE) {\n        nodes.add(node);\n      }\n    });\n    if (hasStyle) {\n      walkSync(doc, (node: Node) => {\n        if (node.type === ELEMENT_NODE) {\n          actions.push(() => scopeElement(node, hash, selectors))\n          if (node.name === 'style') {\n            actions.push(() => {\n              node.children = node.children.map((c: Node) => {\n                if (c.type !== TEXT_NODE) return c;\n                c.value = scopeCSS(c.value, hash);\n                if (c.value === '') {\n                  node.parent.children = node.parent.children.filter((s: Node) => s !== node);\n                }\n                return c;\n              })\n            });\n          }\n        }\n      })\n    }\n    for (const action of actions) {\n      action();\n    }\n    \n    return doc;\n  };\n}\n\nconst NEVER_SCOPED = new Set([\n  \"base\",\n  \"font\",\n  \"frame\",\n  \"frameset\",\n  \"head\",\n  \"link\",\n  \"meta\",\n  \"noframes\",\n  \"noscript\",\n  \"script\",\n  \"style\",\n  \"title\",\n])\n\nfunction hasAttribute(node: ElementNode, name: string) {\n  if (name in node.attributes) {\n    return node.attributes[name] !== 'false';\n  }\n  return false;\n}\n\nfunction scopeElement(node: ElementNode, hash: string, selectors: Set<string>) {\n  const { name } = node;\n  if (!name) return;\n  if (name.length < 1) return;\n  if (NEVER_SCOPED.has(name)) return;\n  if (node.attributes['data-scope']) return;\n  for (const selector of selectors) {\n    if (matches(node, selector)) {\n      node.attributes['data-scope'] = hash;\n      return; \n    }\n  }\n}\n\nfunction scopeSelector(selector: string, hash: string): string {\n  const ast = parse(selector);\n  const scope = (node: AST): string => {\n    switch (node.type) {\n      case 'pseudo-class': {\n        if (node.name === 'root') return node.content;\n        if (node.name === 'global') return node.argument!;\n        return `${node.content}:where([data-scope=\"${hash}\"])`;\n      }\n      case 'compound': return `${selector}:where([data-scope=\"${hash}\"])`\n      case 'complex': {\n        const { left, right, combinator } = node;\n        return `${scope(left)}${combinator}${scope(right)}`\n      }\n      case 'list': return node.list.map(s => scope(s)).join(' ');\n      default: return `${node.content}:where([data-scope=\"${hash}\"])`\n    }\n  }\n  return scope(ast);\n}\n\nfunction scopeCSS(css: string, hash: string) {\n  return serialize(compile(css), middleware([(element) => {\n    if (element.type === 'rule') {\n      if (Array.isArray(element.props)) {\n        element.props = element.props.map(prop => scopeSelector(prop, hash))\n      } else {\n        element.props = scopeSelector(element.props, hash);\n      }\n    }\n  }, stringify]));\n}\n\nfunction getSelectors(css: string) {\n  const selectors = new Set<string>();\n  serialize(compile(css), middleware([(element) => {\n    if (element.type === 'rule') {\n      if (Array.isArray(element.props)) {\n        for (const p of element.props) {\n          selectors.add(p);\n        }\n      } else {\n        selectors.add(element.props);\n      }\n    }\n  }]));\n  return Array.from(selectors);\n}\n\n/**\n * shorthash - https://github.com/bibig/node-shorthash\n *\n * @license\n *\n * (The MIT License)\n *\n * Copyright (c) 2013 Bibig <bibig@me.com>\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst dictionary = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY';\nconst binary = dictionary.length;\n\n// refer to: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\nfunction bitwise(str: string) {\n\tlet hash = 0;\n\tif (str.length === 0) return hash;\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst ch = str.charCodeAt(i);\n\t\thash = (hash << 5) - hash + ch;\n\t\thash = hash & hash; // Convert to 32bit integer\n\t}\n\treturn hash;\n}\n\nfunction shorthash(text: string) {\n\tlet num: number;\n\tlet result = '';\n\n\tlet integer = bitwise(text);\n\tconst sign = integer < 0 ? 'Z' : ''; // It it's negative, start with Z, which isn't in the dictionary\n\n\tinteger = Math.abs(integer);\n\n\twhile (integer >= binary) {\n\t\tnum = integer % binary;\n\t\tinteger = Math.floor(integer / binary);\n\t\tresult = dictionary[num] + result;\n\t}\n\n\tif (integer > 0) {\n\t\tresult = dictionary[integer] + result;\n\t}\n\n\treturn sign + result;\n}\n\n", "export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n", "/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n", "import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n", "import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n", "import {IMPORT, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n", "import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n", "const e={attribute:/\\[\\s*(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)\\s*(?:(?<operator>\\W?=)\\s*(?<value>.+?)\\s*(?<caseSensitive>[iIsS])?\\s*)?\\]/gu,id:/#(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,class:/\\.(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,comma:/\\s*,\\s*/g,combinator:/\\s*[\\s>+~]\\s*/g,\"pseudo-element\":/::(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?<argument>\u00B6+)\\))?/gu,\"pseudo-class\":/:(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?<argument>\u00B6+)\\))?/gu,type:/(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)|\\*/gu},t=new Set([\"pseudo-class\",\"pseudo-element\"]),n=new Set([...t,\"attribute\"]),r=new Set([\"combinator\",\"comma\"]),s=new Set([\"not\",\"is\",\"where\",\"has\",\"matches\",\"-moz-any\",\"-webkit-any\",\"nth-child\",\"nth-last-child\"]),l={\"nth-child\":/(?<index>[\\dn+-]+)\\s+of\\s+(?<subtree>.+)/};s[\"nth-last-child\"]=l[\"nth-child\"];const o=Object.assign({},e);function u(e,t){let n=\"\",r=[];for(;t<e.length;t++){let s=e[t];if(\"(\"===s)r.push(s);else if(\")\"===s){if(!(r.length>0))throw new Error(\"Closing paren without opening paren at \"+t);r.pop()}if(n+=s,0===r.length)return n}throw new Error(\"Opening paren without closing paren\")}function i(e,t){if(!e)return[];var n=[e];for(var s in t){let e=t[s];for(var l=0;l<n.length;l++){var o=n[l];if(\"string\"==typeof o){e.lastIndex=0;var u=e.exec(o);if(u){let e=u.index-1,t=[],r=u[0],i=o.slice(0,e+1);i&&t.push(i),t.push({type:s,content:r,...u.groups});let a=o.slice(e+r.length+1);a&&t.push(a),n.splice(l,1,...t)}}}}let i=0;for(let e=0;e<n.length;e++){let t=n[e],s=t.length||t.content.length;\"object\"==typeof t&&(t.pos=[i,i+s],r.has(t.type)&&(t.content=t.content.trim()||\" \")),i+=s}return n}function a(r){if(!r)return null;r=r.trim();let s=[];r=r.replace(/(['\"])(\\\\\\1|.)+?\\1/g,((e,t,n,r)=>(s.push({str:e,start:r}),t+\"\u00A7\".repeat(n.length)+t)));let l,a=[],c=0;for(;(l=r.indexOf(\"(\",c))>-1;){let e=u(r,l);a.push({str:e,start:l}),r=r.substring(0,l)+\"(\"+\"\u00B6\".repeat(e.length-2)+\")\"+r.substring(l+e.length),c=l+e.length}let p=i(r,e);function f(e,t,n){for(let r of e)for(let e of p)if(n.has(e.type)&&e.pos[0]<r.start&&r.start<e.pos[1]){let n=e.content;if(e.content=e.content.replace(t,r.str),e.content!==n){o[e.type].lastIndex=0;let t=o[e.type].exec(e.content).groups;Object.assign(e,t)}}}return f(a,/\\(\u00B6+\\)/,t),f(s,/(['\"])\u00A7+?\\1/,n),p}function c(e,{list:t=!0}={}){if(t&&e.find((e=>\"comma\"===e.type))){let t=[],n=[];for(let r=0;r<e.length;r++)if(\"comma\"===e[r].type){if(0===n.length)throw new Error(\"Incorrect comma at \"+r);t.push(c(n,{list:!1})),n.length=0}else n.push(e[r]);if(0===n.length)throw new Error(\"Trailing comma\");return t.push(c(n,{list:!1})),{type:\"list\",list:t}}for(let t=e.length-1;t>=0;t--){let n=e[t];if(\"combinator\"===n.type){let r=e.slice(0,t),s=e.slice(t+1);return{type:\"complex\",combinator:n.content,left:c(r),right:c(s)}}}return 0===e.length?null:1===e.length?e[0]:{type:\"compound\",list:[...e]}}function p(e,t,n,r){if(e){if(\"complex\"===e.type)p(e.left,t,n,e),p(e.right,t,n,e);else if(\"compound\"===e.type)for(let r of e.list)p(r,t,n,e);else e.subtree&&n&&n.subtree&&p(e.subtree,t,n,e);t(e,r)}}function f(e,{recursive:t=!0,list:n=!0}={}){let r=a(e);if(!r)return null;let o=c(r,{list:n});return t&&p(o,(e=>{if(\"pseudo-class\"===e.type&&e.argument&&s.has(e.name)){let t=e.argument;const n=l[e.name];if(n){const r=n.exec(t);if(!r)return;Object.assign(e,r.groups),t=r.groups.subtree}t&&(e.subtree=f(t,{recursive:!0,list:!0}))}})),o}function g(e,t){return t=t||Math.max(...e)+1,e[0]*t**2+e[1]*t+e[2]}function h(e,{format:t=\"array\"}={}){let n=\"object\"==typeof e?e:f(e,{recursive:!0});if(!n)return null;if(\"list\"===n.type){let e=10,t=n.list.map((t=>{let n=h(t);return e=Math.max(e,...n),n})),r=t.map((t=>g(t,e)));return t[function(e){let t=e[0],n=0;for(let r=0;r<e.length;r++)e[r]>t&&(n=r,t=e[r]);return 0===e.length?-1:n}(r)]}let r=[0,0,0];return p(n,(e=>{if(\"id\"===e.type)r[0]++;else if(\"class\"===e.type||\"attribute\"===e.type)r[1]++;else if(\"type\"===e.type&&\"*\"!==e.content||\"pseudo-element\"===e.type)r[2]++;else if(\"pseudo-class\"===e.type&&\"where\"!==e.name)if(s.has(e.name)&&e.subtree){h(e.subtree).forEach(((e,t)=>r[t]+=e))}else r[1]++})),r}o[\"pseudo-element\"]=RegExp(e[\"pseudo-element\"].source.replace(\"(?<argument>\u00B6+)\",\"(?<argument>.+?)\"),\"gu\"),o[\"pseudo-class\"]=RegExp(e[\"pseudo-class\"].source.replace(\"(?<argument>\u00B6+)\",\"(?<argument>.+)\"),\"gu\");export{s as RECURSIVE_PSEUDO_CLASSES,l as RECURSIVE_PSEUDO_CLASSES_ARGS,e as TOKENS,r as TRIM_TOKENS,u as gobbleParens,c as nestTokens,f as parse,h as specificity,g as specificityToNumber,a as tokenize,i as tokenizeBy,p as walk};\n"],
  "mappings": "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",
  "names": ["walkSync", "ELEMENT_NODE", "TEXT_NODE", "render", "matches", "COMMENT", "RULESET", "DECLARATION", "IMPORT", "KEYFRAMES", "abs", "from", "trim", "value", "replace", "value", "pattern", "replacement", "indexof", "search", "charat", "index", "substr", "begin", "end", "strlen", "sizeof", "append", "array", "line", "column", "length", "position", "character", "characters", "node", "value", "root", "parent", "type", "props", "children", "char", "character", "prev", "position", "charat", "characters", "column", "line", "next", "length", "peek", "caret", "slice", "begin", "end", "substr", "token", "type", "alloc", "value", "strlen", "dealloc", "delimit", "trim", "delimiter", "whitespace", "type", "character", "peek", "next", "token", "escaping", "index", "count", "next", "character", "slice", "caret", "peek", "delimiter", "type", "position", "commenter", "from", "identifier", "token", "compile", "value", "dealloc", "parse", "alloc", "root", "parent", "rule", "rules", "rulesets", "pseudo", "points", "declarations", "index", "offset", "length", "atrule", "property", "previous", "variable", "scanning", "ampersand", "character", "type", "props", "children", "reference", "characters", "next", "charat", "indexof", "replace", "delimit", "whitespace", "escaping", "caret", "peek", "append", "comment", "commenter", "strlen", "declaration", "ruleset", "prev", "from", "identifier", "post", "size", "sizeof", "i", "j", "k", "x", "y", "substr", "abs", "z", "trim", "node", "RULESET", "COMMENT", "char", "DECLARATION", "serialize", "children", "callback", "output", "length", "sizeof", "i", "stringify", "element", "index", "IMPORT", "DECLARATION", "COMMENT", "KEYFRAMES", "RULESET", "strlen", "middleware", "collection", "length", "sizeof", "element", "index", "children", "callback", "output", "i", "e", "t", "n", "r", "s", "l", "o", "u", "i", "a", "c", "p", "f", "o", "e", "scope", "opts", "doc", "hash", "shorthash", "render", "actions", "hasStyle", "selectors", "nodes", "walkSync", "node", "ELEMENT_NODE", "hasAttribute", "selector", "getSelectors", "scopeElement", "c", "TEXT_NODE", "scopeCSS", "s", "action", "NEVER_SCOPED", "name", "matches", "scopeSelector", "ast", "f", "left", "right", "combinator", "css", "serialize", "compile", "middleware", "element", "prop", "stringify", "p", "dictionary", "binary", "bitwise", "str", "i", "ch", "text", "num", "result", "integer", "sign"]
}
